Use this area as your Programming Journal. Include a Journal Entry for each day, and the changes that you make to your program. There should be a minimum of 5 journal entries a week.

march 15 (day 1):
I started brainstorming ideas for the website and how to accomplish these ideas. I began working on the homepage of the site, and quickly realized that I wouldn't be able to work on the other pages if I didn't make buttons to take me to them, so I also began working on some of the Javascript code for the buttons. The Javascript code did not work at first, and after a while, I realized that the Javascript functions were missing the word "function" in front of them.

march 16 (day 2):
I spent the majority of my time today formatting the 1-10 numerical buttons, the table that I put them in, and worked on the Javascript for them. I did run into some issues regarding the functions before I realized that I'd forgotten a curly brace higher up in the Javascript code, and once I figured that out, I continued working on the code, creating different variables as well to store different taste options and the user's preference for them (starting with sweet). I also spent a very long time trying to find a good favicon for the site, and it was annoying in that a lot of the images I found and thought were good didn't actually have a link to the site of the image -- a lot of the links were broken and while the images still showed up in a Google search, I was unable to find where the images came from and was therefore unable to use them. I did, however, eventually find a Giphy image that worked fine, though I'm a little sad that I was unable to find a good bellflower image to match the theme and name of the website.

march 17 (day 3):
To be completely honest, I was procrastinating working on the Javascript a little, so I was mainly coming up for a backstory for the Bellflower Bakery and working on lists. I've started on the lists for different food items, and realized about halfway through with the foodoptions[] list that it would be harder to figure out what flavors of items the user would enjoy if there was such a large variety of flavors in the options list alone, so I also made a flavors list, adding and removing certain flavors so that they could theoretically apply to most of the food options (though to be honest, lemon brownies sounds a little gross). Not too sure what to do about more savory options, though, so I might have to make a separate list for those, and I'm considering removing the bitter and umami taste options as well and only focus on sweet. I'm more likely to keep bitter, though, because of things like dark chocolate and coffee, but umami means that I'd have to add things like breakfast croissants, and while that's not a bad idea, it would mean more coding and I already have too much to do as it is.
I also began the if statements for if the user picks a certain amount of sweetness, and what bakery items that would put into their cart.

march 20 (day 4):
I ended up making multiple lists for flavors. I'm also kind of reconsidering having flavors at all due to how it complicates everything a lot further. I was also initally concerned with how to keep variables' values if I had a different page for each question, so I gave the quiz section of the quiz HTML page an ID to be able to clear it out as different questions pop up. I was also working on the sweet() function and it wasn't working for the moment because of the push.apply code section, so after trying to fix the error, I ended up removing the list of food options. I also replaced the number functions with buttons specific to the taste option, which I'm a little hesitant about because of how it would make the code longer, but I also kept running into issues with local/global variables otherwise, which is why I chose to make the change.
Even with the changes, though, I keep getting an error saying "createlistfromarraylike called on non-object", and I thought it was the .apply at the end causing the trouble, but even now, after removing it, there is a new error saying that "push" is undefined. I've decided to also switch around the order in which I work on things (everything for one question first, rather than all the buttons then everything else, etc.), mostly because of the fact that it would be impractical to work on everything at once and then not have it work at all and not knowing where the error is.

march 21 (day 5):
Rechanged the number buttons to be nonspecific and added parameters in order to have the same effect as earlier, only simplified. I also figured out where the error was with the push and added flavors to the foods. I added the salty() function as well though I ran into some issues regarding the parameters, and replaced the "let" in front of the variables with "var" due to an error that kept popping up.

march 22 (day 6):
Changed the number button parameter to be a number rather than a string due to the string requiring too many quotation marks that got confusing very quickly, as well as kept causing errors for reasons that I couldn't figure out. I also started on the umamichoice option, sour() function, and added a yes() and a no() function, though the code keeps going directly to sour() even when it should be going to umamichoice first. I fixed that by making sure that only after the user made their choice for umami did the screen change (using an onclick function).
I initially wanted to make the umamichoice option within the salty() function, but after tinkering with it a little, I decided to make a umami() function, then changed my mind and put what would have been inside the function, into the yes/no button functions.

march 23 (day 7):
I finished the umami choices and sour() function, and began the autumnal flavors function. I did run into a dilemna here though, because after some research, I realized that I wouldn't be able to remove cart items that contained only the specific flavor string (if the user disliked apples, then the function should be removing cart items containing the string "apple"). My current idea is to just look at all the possible food options, and then remove the specific ones by name (removing "apple-cinnamon bagel" and "apple-caramel scone", etc instead of just removing all with "apple" string in them), and later on in the day, that was what I did. I finished the autumn() function for autumnal flavors, the berry() function for berry flavors, tropical() function for tropical flavors, and am almost finished with the chocolate() function for chocolate flavored foods. These functions are a "yes/no" type and if the user clicks "no", foods with the corresponding flavors are taken out of the function. I ended up not completing the recommendation function mostly only because I wanted to change how it works and decided to combine it with the "buy" function, so I plan to work on it tomorrow along with the "buy" function.

march 24 (day 8):
Now that I've got the hang of things, it was very easy to add the finishing details to the functions from yesterday and complete the chocolate() and dairy() functions. After completing the dairy function, I started on the recommendation function, knowing that I will not have enough time for a randomization function. However, despite everything that I've tried, the function will not print the proper amount of buttons depending on the amount of items in the list, so I've deleted the function for now and will continue it on Monday.

march 25 (day 9):
Catch-up day today! I decided to go with my initial idea of individual ids for each button, with matching statements for each. I ran into some issues when it kept saying that there was a null value, and I tried scrapping that and going for a function that relied on parameters instead, but that didn't work either.

march 28 (day 10):
Last coding day!
After repeated issues, I decided to scrap the button function to add to cart altogether because no matter what I tried, the variable value is always undefined.
Later on, though, I decided to set a variable equal to all the buttons needed to add items to cart, and then display that, which ended up working.